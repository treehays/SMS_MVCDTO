@*@model SMS_MVCDTO.Models.DTOs.ProductDTOs.ProductResponseModel*@
@*@model ProductTransactionViewModel*@
@model IEnumerable<SMS_MVCDTO.Models.DTOs.CartDTOs.CartResponseModel>


@{/*
    ViewData["Title"] = "Edit";
@{
    if (TempData["success"] != null)
    {
        <h2>@TempData["success"]</h2>
    }
    if (TempData["failed"] != null)
    {
        <h2>@TempData["failed"]</h2>
    }
}

*/}

    



<main class="main">
    <!-- <div class="dashboard"> -->
    <div class="form-container">

        <!-- Signup Form -->
        <h1>Check Out..</h1>
        <hr />

        <div id="">
            <table class="table table-info">
                <thead>
                    <tr>
                        <th>S/N</th>

                        <th>
                            @Html.DisplayNameFor(model => model.Data.ProductId)
                        </th>

                        @*<th>
                            @Html.DisplayNameFor(model => model.Data.ProductName)
                        </th>*@

                        <th>
                            @Html.DisplayNameFor(model => model.Data.Quantity)
                        </th>

                        <th>
                            @*@Html.DisplayNameFor(model => model.Data.Amount)*@
                        </th>
                        @*  <th>
                        @Html.DisplayNameFor(model =>
                        model.Data.GuarantorName)
                        </th>*@
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int serialNumber = 1;
                    }
                    @foreach (var item in Model)
                    {

                        <tr>
                            <td>
                                @serialNumber
                            </td>
                            @*<td>
                                @Html.DisplayFor(modelItem => item.Data.FirstName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Data.LastName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Data.Gender)
                            </td>*@

                            @*  <td>
                        @Html.DisplayFor(modelItem =>
                        item.Data.GuarantorName)
                        </td>*@
                          @*  <td>
                                <a asp-action="Edit"
                               asp-route-staffId="@item.Data.StaffId">Edit</a>
                                |
                                <a asp-action="Details"
                               asp-route-staffId="@item.Data.StaffId">Details</a>
                                |
                                <a asp-action="DeletePreview"
                               asp-route-staffId="@item.Data.StaffId">Delete</a>
                            </td>*@
                        </tr>
                        serialNumber++;
                    }
                </tbody>
            </table>

        </div>

    </div>

    <!-- search box  -->
    <div class="search-container-side">

        <!-- search box  -->
        <div class="search-container">
            <form>
                <input type="text" placeholder="Customer ID..." name="Details">
                <button type="submit">
                    <i class="fa fa-search"></i> Search
                </button>
            </form>
        </div>

        <!-- search box  -->
        <div class="search-container">
            <form>
                <input type="text" placeholder="Search1...">
                <button type="submit">
                    <i class="fa fa-search"></i> Search
                </button>
            </form>
        </div>

    </div>


</main>






@{

/*
 * 


<div class="col-md-4">
    @using (Html.BeginForm("Create", "Transaction"))
    {

        <div class="form-group">
            @Html.HiddenFor(x => x.Product.Data.Barcode, new {@class = "form-control"})
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.Product.Data.Name, new {@class = "control-label"})
            @Html.TextBoxFor(x => x.Product.Data.Name, new {@class = "form-control", @readonly="readonly"})
            @Html.ValidationMessageFor(x => x.Product.Data.Name,"", new {@class="text-danger"})
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.Product.Data.SellingPrice, new {@class = "control-label"})
            @Html.TextBoxFor(x => x.Product.Data.SellingPrice, new {@class = "form-control", @readonly = "readonly"} )
            @Html.ValidationMessageFor(x => x.Product.Data.SellingPrice,"", new {@class="text-danger"})
        </div>
@*
        <div class="form-group">
            @Html.LabelFor(x => x.Transaction.Quantity, new {@class = "control-label"})
            @Html.TextBoxFor(x => x.Transaction.Quantity, new {@class = "form-control"})
            @Html.ValidationMessageFor(x => x.Transaction.Quantity,"", new {@class="text-danger"})
        </div>*@
        
        <div class="form-group">
            @Html.LabelFor(x => x.Transaction.CustomerId, new {@class = "control-label"})
            @Html.TextBoxFor(x => x.Transaction.CustomerId, new {@class = "form-control"})
            @Html.ValidationMessageFor(x => x.Transaction.CustomerId,"", new {@class="text-danger"})
        </div>

        */
    }

      @*  
        
        <div class="form-group">
            @Html.LabelFor(x => x.Transaction.AttendantId, new {@class = "control-label"})
            @Html.TextBoxFor(x => x.Transaction.AttendantId, new {@class = "form-control"})
            @Html.ValidationMessageFor(x => x.Transaction.AttendantId,"", new {@class="text-danger"})
        </div>
        
          <div class="form-group">
            @Html.LabelFor(x => x.TempTotal, new {@class = "control-label"})
            @Html.TextBoxFor(x => x.TempTotal, new {@class = "form-control"})
            @Html.ValidationMessageFor(x => x.TempTotal,"", new {@class="text-danger"})
        </div>*@


        <div class="form-group">
            <button type="submit" class="btn btn-success">Add</button>
        </div>
    }
</div>
@section scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

@{ /*
@{
    ViewData["Title"] = "Create";
}
@{
    if (TempData["success"] != null)
    {
        <h2>@TempData["success"]</h2>
    }
    if (TempData["failed"] != null)
    {
        <h2>@TempData["failed"]</h2>
    }
}

<h1> ADD CATEGORY</h1>
<hr />
<div class="col-md-4">
    @using (Html.BeginForm("Create", "Transaction"))
    {
        <div class="form-group">
            @Html.LabelFor(x => x.BarCode, new {@class = "control-label"})
            @Html.TextBoxFor(x => x.BarCode, new {@class = "form-control"})
            @Html.ValidationMessageFor(x => x.BarCode,"", new {@class="text-danger"})
        </div>

        @*<div class="form-group">
    @Html.LabelFor(x => x.ReferenceNo, new {@class = "control-label"})
    @Html.TextBoxFor(x => x.ReferenceNo, new {@class = "form-control"})
    @Html.ValidationMessageFor(x => x.ReferenceNo,"", new {@class="text-danger"})
    </div>
    *@
        <div class="form-group">
            @Html.LabelFor(x => x.Quantity, new {@class = "control-label"})
            @Html.TextBoxFor(x => x.Quantity, new {@class = "form-control"})
            @Html.ValidationMessageFor(x => x.Quantity,"", new {@class="text-danger"})
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-success">Add</button>
        </div>
    }
</div>
@section scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}


               
     * @model SMS_MVCDTO.Models.DTOs.TransactionDTOs.CreateTransactionRequestModel


@{
ViewData["Title"] = "Create";
}
@{
if (TempData["success"] != null)
{
    <h2>@TempData["success"]</h2>
}
if (TempData["failed"] != null)
{
    <h2>@TempData["failed"]</h2>
}
}

<h1> ADD CATEGORY</h1>
<hr />
<div class="col-md-4">
@using (Html.BeginForm("Create", "Transaction"))
{

    <div class="form-group">
        @Html.LabelFor(x => x.BarCode, new {@class = "control-label"})
        @Html.TextBoxFor(x => x.BarCode, new {@class = "form-control"})
        @Html.ValidationMessageFor(x => x.BarCode,"", new {@class="text-danger"})
    </div>


    <div class="form-group">
        @Html.LabelFor(x => x.Quantity, new {@class = "control-label"})
        @Html.TextBoxFor(x => x.Quantity, new {@class = "form-control"})
        @Html.ValidationMessageFor(x => x.Quantity,"", new {@class="text-danger"})
    </div>


    <div class="form-group">
        <button type="submit" class="btn btn-success">Add</button>
    </div>
}
</div>
@section scripts {
@{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
     }
         }
    */
            }