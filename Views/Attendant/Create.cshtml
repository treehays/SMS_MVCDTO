@using SMS_MVCDTO.Enums
@model SMS_MVCDTO.Models.DTOs.AttendantDTOs.CreateAttendantRequestModel

@{

    ViewData["Title"] = "Create";
    if (TempData["Success"] != null)
    {
        <h2>@TempData["success"]</h2>
    }
    if (TempData["failed"] != null)
    {
        <h2>@TempData["failed"]</h2>
    }
}




<main class="main">
    <!-- <div class="dashboard"> -->
    <div class="form-container">

        <div id="Data-form">


            @using (Html.BeginForm("Create", "Attendant"))
            {
                <h1>Add new customer</h1>

                <hr />
                <div class="">
                    @Html.LabelFor(x => x.FirstName, new {@class = "control-label"})
                    @Html.TextBoxFor(x => x.FirstName, new {@class = "form-control"})
                    @Html.ValidationMessageFor(x => x.FirstName,"", new
                {@class="text-danger"})
                </div>

                <div class="">
                    @Html.LabelFor(x => x.LastName, new {@class = "control-label"})
                    @Html.TextBoxFor(x => x.LastName, new {@class = "form-control"})
                    @Html.ValidationMessageFor(x => x.LastName,"", new
                {@class="text-danger"})
                </div>

                


                <div class="">
                    @Html.LabelFor(x => x.Email, new {@class = "control-label"})
                    @Html.TextBoxFor(x => x.Email, new {@class = "form-control"})
                    @Html.ValidationMessageFor(x => x.Email,"", new
                {@class="text-danger"})
                </div>


                <div class="">
                    @Html.LabelFor(x => x.PhoneNumber, new {@class = "control-label"})
                    @Html.TextBoxFor(x => x.PhoneNumber, new {@class = "form-control"})
                    @Html.ValidationMessageFor(x => x.PhoneNumber,"", new
                {@class="text-danger"})
                </div>

                
                <div class="">
                    @Html.LabelFor(x => x.DateOfBirth, new {@class = "control-label"})
                    @Html.EditorFor(x => x.DateOfBirth, new {@class = "form-control"})
                    @Html.ValidationMessageFor(x => x.DateOfBirth,"", new
                {@class="text-danger"})
                </div>
         
                <div class="">
                    @Html.LabelFor(x => x.HomeAddress, new {@class = "control-label"})
                    @Html.TextBoxFor(x => x.HomeAddress, new {@class = "form-control"})
                    @Html.ValidationMessageFor(x => x.HomeAddress,"", new
                {@class="text-danger"})
                </div>


                <div class="">
                    @Html.LabelFor(x => x.ResidentialAddress, new {@class = "control-label"})
                    @Html.TextBoxFor(x => x.ResidentialAddress, new {@class = "form-control"})
                    @Html.ValidationMessageFor(x => x.ResidentialAddress,"", new
                {@class="text-danger"})
                </div>



                <div class="">
                    @Html.LabelFor(x => x.Gender, new {@class = "control-label"})
                    @Html.DropDownListFor(x => x.Gender, new SelectList(Enum.GetValues(typeof(GenderType) )))
                    @Html.ValidationMessageFor(x => x.Gender,"", new
                {@class="text-danger"})
                </div>


                <div class="">
                    @Html.LabelFor(x => x.MaritalStatus, new {@class = "control-label"})
                    @Html.DropDownListFor(x => x.MaritalStatus, new SelectList(Enum.GetValues(typeof(MaritalStatusType) )))
                    @Html.ValidationMessageFor(x => x.MaritalStatus,"", new
                {@class="text-danger"})
                </div>


                <div class="">
                    @Html.LabelFor(x => x.BankAccountNumber, new {@class = "control-label"})
                    @Html.TextBoxFor(x => x.BankAccountNumber, new {@class = "form-control"})
                    @Html.ValidationMessageFor(x => x.BankAccountNumber,"", new
                {@class="text-danger"})
                </div>


                <div class="">
                    @Html.LabelFor(x => x.BankName, new {@class = "control-label"})
                    @Html.TextBoxFor(x => x.BankName, new {@class = "form-control"})
                    @Html.ValidationMessageFor(x => x.BankName,"", new
                {@class="text-danger"})
                </div>


                <div class="">
                    @Html.LabelFor(x => x.GuarantorName, new {@class = "control-label"})
                    @Html.TextBoxFor(x => x.GuarantorName, new {@class = "form-control"})
                    @Html.ValidationMessageFor(x => x.GuarantorName,"", new
                {@class="text-danger"})
                </div>
                
                <div class="">
                    @Html.LabelFor(x => x.GuarantorPhoneNumber, new {@class = "control-label"})
                    @Html.TextBoxFor(x => x.GuarantorPhoneNumber, new {@class = "form-control"})
                    @Html.ValidationMessageFor(x => x.GuarantorPhoneNumber,"", new
                {@class="text-danger"})
                </div>
                
                <div class="">
                    @Html.LabelFor(x => x.Password, new {@class = "control-label"})
                    @Html.TextBoxFor(x => x.Password, new {@class = "form-control"})
                    @Html.ValidationMessageFor(x => x.Password,"", new
                {@class="text-danger"})
                </div>
                

                <div class="form-group">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-success"><i class="fa fa-user"></i> ADD</button> 
                </div>
            }
        </div>

    </div>

    <!-- search box  -->
    <div class="search-container">
        <form>
            <input type="text" placeholder="Search...">
            <button type="submit"><i class="fa fa-search"></i> Search </button>
        </form>
    </div>



    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    }
</main>
@* ends here *@
